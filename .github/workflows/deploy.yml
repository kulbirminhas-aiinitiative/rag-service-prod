name: RAG Service - Unified Deployment
# Configuration-driven deployment using centralized config.yml
# Change environment by editing deployment/config.yml

on:
  push:
    branches:
      - main      # Triggers demo deployment
      - develop   # Can trigger development deployment
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (development, demo, production)'
        required: true
        type: choice
        options:
          - development
          - demo
          - production
        default: 'demo'

jobs:
  # ============================================================================
  # GATE 1: Code Quality
  # ============================================================================
  code-quality:
    name: "Gate 1: Code Quality"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --with dev,test
        continue-on-error: true

      - name: Check Python syntax
        run: find src -name "*.py" -exec python -m py_compile {} \;
        continue-on-error: true

      - name: Run Black (code formatting)
        run: poetry run black --check src/ --line-length 150 || echo "Black check completed with warnings"
        continue-on-error: true

      - name: Run isort (import sorting)
        run: poetry run isort --check src/ || echo "isort check completed with warnings"
        continue-on-error: true

  # ============================================================================
  # GATE 2 & 3: Deploy to Demo (using reusable workflow)
  # ============================================================================
  deploy-demo:
    name: "Deploy to Demo"
    needs: code-quality
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy-template.yml
    with:
      service_name: rag-service
      environment: demo
      service_directory: .
    secrets:
      SSH_KEY: ${{ secrets.DEMO_SSH_KEY }}

  # ============================================================================
  # GATE 2 & 3: Deploy to Development (using reusable workflow)
  # ============================================================================
  deploy-development:
    name: "Deploy to Development"
    needs: code-quality
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/deploy-template.yml
    with:
      service_name: rag-service
      environment: development
      service_directory: .
    secrets:
      SSH_KEY: ${{ secrets.DEV_SSH_KEY }}

  # ============================================================================
  # Manual Deployment to Any Environment
  # ============================================================================
  deploy-manual:
    name: "Manual Deploy to ${{ github.event.inputs.environment }}"
    needs: code-quality
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/deploy-template.yml
    with:
      service_name: rag-service
      environment: ${{ github.event.inputs.environment }}
      service_directory: .
    secrets:
      SSH_KEY: ${{ github.event.inputs.environment == 'development' && secrets.DEV_SSH_KEY || github.event.inputs.environment == 'demo' && secrets.DEMO_SSH_KEY || secrets.PROD_SSH_KEY }}
